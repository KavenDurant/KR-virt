name: 🚀 KR-Virt CI/CD Pipeline

on:
  push:
    branches: [ main, develop, background-fix ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'

jobs:
  # 代码质量检查和测试
  lint-and-test:
    name: 🔍 代码质量检查
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v5
      
    - name: 📦 设置 Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 安装依赖
      run: npm ci
      
    - name: 🔍 ESLint 检查
      run: npm run lint
      continue-on-error: true
      
    - name: 🧪 运行测试
      run: npm run test:run
      continue-on-error: true
      
    - name: 📊 生成测试覆盖率
      run: npm run test:coverage
      continue-on-error: true
      
    - name: 📤 上传测试报告
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results.xml
        retention-days: 30

  # 构建验证
  build:
    name: 🏗️ 构建验证
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v5
      
    - name: 📦 设置 Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 安装依赖
      run: npm ci
      
    - name: 🏗️ 构建项目 (开发模式)
      run: npm run build
      env:
        VITE_API_BASE_URL: /api
        VITE_APP_TITLE: KR虚拟化管理系统
        VITE_ENABLE_MOCK: true
        
    - name: 🏗️ 构建项目 (生产模式)
      run: npm run build:prod
      env:
        VITE_API_BASE_URL: https://api.kr-virt.example.com
        VITE_APP_TITLE: KR虚拟化管理系统
        VITE_ENABLE_MOCK: false
        
    - name: 📦 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 30

  # 安全扫描
  security:
    name: 🛡️ 安全扫描
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v5
      
    - name: 📦 设置 Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 安装依赖
      run: npm ci
      
    - name: 🛡️ 运行 npm audit
      run: npm audit --audit-level high
      continue-on-error: true
      
    - name: 🔍 初始化 CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: 🔍 自动构建
      uses: github/codeql-action/autobuild@v3
        
    - name: 🔍 执行 CodeQL 分析
      uses: github/codeql-action/analyze@v3

  # 部署到 GitHub Pages
  deploy:
    name: 🚀 部署到 GitHub Pages
    runs-on: ubuntu-latest
    needs: [lint-and-test, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/background-fix'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v5
      
    - name: 📦 设置 Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 安装依赖
      run: npm ci
      
    - name: 🏗️ 生产构建
      run: npm run build:prod
      env:
        # GitHub Pages 专用配置
        VITE_API_BASE_URL: /api
        VITE_APP_TITLE: KR虚拟化管理系统 - Demo
        VITE_ENABLE_MOCK: true
        VITE_ENABLE_DEV_TOOLS: false
        
    - name: 📤 配置 Pages
      uses: actions/configure-pages@v4
      
    - name: 📤 上传到 Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
    - name: 🚀 部署到 Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: 📋 部署结果
      run: |
        echo "🎉 部署成功！"
        echo "🌐 访问地址: ${{ steps.deployment.outputs.page_url }}"
        echo "📅 部署时间: $(date)" 