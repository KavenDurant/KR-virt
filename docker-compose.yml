version: '3.8'

services:
  # KR-Virt 前端应用
  kr-virt-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kr-virt-frontend
    ports:
      - "3000:80"
    environment:
      - TZ=Asia/Shanghai
    volumes:
      # 如果需要自定义 nginx 配置
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # 日志目录
      - ./logs/nginx:/var/log/nginx
    restart: unless-stopped
    networks:
      - kr-virt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kr-virt.rule=Host(`kr-virt.local`)"
      - "traefik.http.services.kr-virt.loadbalancer.server.port=80"
      
  # 可选：Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: kr-virt-redis
    ports:
      - "6379:6379"
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - kr-virt-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  # 可选：Nginx 反向代理
  nginx-proxy:
    image: nginx:alpine
    container_name: kr-virt-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/ssl:/etc/nginx/ssl:ro
      - ./logs/proxy:/var/log/nginx
    depends_on:
      - kr-virt-web
    restart: unless-stopped
    networks:
      - kr-virt-network
    profiles:
      - production

networks:
  kr-virt-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local 