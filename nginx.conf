# Nginx 配置文件 - KR-Virt 虚拟化管理系统
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # 基础配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # 隐藏 Nginx 版本
    server_tokens off;
    
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # 错误页面
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        # 主应用路由 - SPA 支持
        location / {
            try_files $uri $uri/ /index.html;
            
            # 缓存策略 - HTML 文件不缓存
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
        }
        
        # 静态资源缓存
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # 字体文件 CORS 支持
            location ~* \.(woff|woff2|eot|ttf|otf)$ {
                add_header Access-Control-Allow-Origin "*";
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Favicon 缓存
        location = /favicon.ico {
            expires 30d;
            add_header Cache-Control "public, immutable";
            log_not_found off;
        }
        
        # Robots.txt
        location = /robots.txt {
            expires 7d;
            add_header Cache-Control "public";
            log_not_found off;
        }
        
        # API 代理（如果需要）
        location /api/ {
            # 如果有后端 API，可以在这里配置代理
            # proxy_pass http://backend:8080/;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            
            # 临时返回 JSON 响应（开发用）
            return 200 '{"message": "API 服务暂未配置", "status": "development"}';
            add_header Content-Type application/json;
        }
        
        # WebSocket 支持（如果需要）
        location /ws/ {
            # proxy_pass http://backend:8080/;
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            
            return 404;
        }
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 '{"status": "healthy", "service": "kr-virt", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        # 安全性：禁止访问敏感文件
        location ~ /\. {
            deny all;
            log_not_found off;
        }
        
        location ~ /\.(git|svn|env) {
            deny all;
            log_not_found off;
        }
        
        # 状态监控（可选）
        location = /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
} 